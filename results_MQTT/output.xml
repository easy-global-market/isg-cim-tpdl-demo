<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.7.5 on linux)" generated="20200928 16:59:37.214" rpa="false">
<suite id="s1" name="Isg-Cim-Tpdl-Demo" source="/home/poliveira/git/isg-cim-tpdl-demo">
<suite id="s1-s1" name="Tests" source="/home/poliveira/git/isg-cim-tpdl-demo/Tests">
<suite id="s1-s1-s1" name="TestBinding" source="/home/poliveira/git/isg-cim-tpdl-demo/Tests/TestBinding.robot">
<test id="s1-s1-s1-t1" name="Test MQTT binding">
<kw name="Print current binding" library="MQTT">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Current binding is MQTT</arg>
</arguments>
<status status="PASS" starttime="20200928 16:59:37.284" endtime="20200928 16:59:37.284"></status>
</kw>
<status status="PASS" starttime="20200928 16:59:37.283" endtime="20200928 16:59:37.284"></status>
</kw>
<kw name="Check notification" library="MQTT">
<doc>Subscribe async, publish 1 message, listen for and validate it is received</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20200928 16:59:37.285" level="INFO">${time} = 1601308777</msg>
<status status="PASS" starttime="20200928 16:59:37.285" endtime="20200928 16:59:37.286"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=.</arg>
<arg>robot.mqtt</arg>
<arg>${time}</arg>
</arguments>
<assign>
<var>${client}</var>
</assign>
<msg timestamp="20200928 16:59:37.286" level="INFO">${client} = robot.mqtt.1601308777</msg>
<status status="PASS" starttime="20200928 16:59:37.286" endtime="20200928 16:59:37.286"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>test/mqtt_test_sub</arg>
</arguments>
<assign>
<var>${topic}</var>
</assign>
<msg timestamp="20200928 16:59:37.287" level="INFO">${topic} = test/mqtt_test_sub</msg>
<status status="PASS" starttime="20200928 16:59:37.286" endtime="20200928 16:59:37.287"></status>
</kw>
<kw name="Subscribe Async" library="MQTT">
<arguments>
<arg>client.id=${client}</arg>
<arg>topic=${topic}</arg>
</arguments>
<kw name="Connect" library="MQTTLibrary">
<doc>Connect to an MQTT broker. This is a pre-requisite step for publish
and subscribe keywords.</doc>
<arguments>
<arg>${broker.uri}</arg>
<arg>${port}</arg>
<arg>${client.id}</arg>
<arg>${false}</arg>
</arguments>
<msg timestamp="20200928 16:59:37.291" level="INFO">Connecting to 127.0.0.1 at port 1883</msg>
<status status="PASS" starttime="20200928 16:59:37.290" endtime="20200928 16:59:37.297"></status>
</kw>
<kw name="Subscribe" library="MQTTLibrary">
<doc>Subscribe to a topic and return a list of message payloads received
    within the specified time.</doc>
<arguments>
<arg>${topic}</arg>
<arg>${qos}</arg>
<arg>${timeout}</arg>
<arg>${limit}</arg>
</arguments>
<msg timestamp="20200928 16:59:37.298" level="INFO">Subscribing to topic: test/mqtt_test_sub</msg>
<msg timestamp="20200928 16:59:37.298" level="INFO">Starting background loop</msg>
<status status="PASS" starttime="20200928 16:59:37.297" endtime="20200928 16:59:37.299"></status>
</kw>
<status status="PASS" starttime="20200928 16:59:37.288" endtime="20200928 16:59:37.299"></status>
</kw>
<kw name="Publish to MQTT Broker" library="MQTT">
<arguments>
<arg>topic=${topic}</arg>
<arg>message=test message</arg>
<arg>qos=1</arg>
</arguments>
<kw name="Connect" library="MQTTLibrary">
<doc>Connect to an MQTT broker. This is a pre-requisite step for publish
and subscribe keywords.</doc>
<arguments>
<arg>${broker.uri}</arg>
<arg>${port}</arg>
<arg>${client.id}</arg>
<arg>${clean_session}</arg>
</arguments>
<msg timestamp="20200928 16:59:37.301" level="INFO">Connecting to 127.0.0.1 at port 1883</msg>
<status status="PASS" starttime="20200928 16:59:37.300" endtime="20200928 16:59:37.303"></status>
</kw>
<kw name="Publish" library="MQTTLibrary">
<doc>Publish a message to a topic with specified qos and retained flag.
It is required that a connection has been established using `Connect`
keyword before using this keyword.</doc>
<arguments>
<arg>${topic}</arg>
<arg>${message}</arg>
<arg>${qos}</arg>
<arg>${retention}</arg>
</arguments>
<msg timestamp="20200928 16:59:37.305" level="INFO">Publish topic: test/mqtt_test_sub, message: test message, qos: 1, retain: False</msg>
<status status="PASS" starttime="20200928 16:59:37.304" endtime="20200928 16:59:37.306"></status>
</kw>
<status status="PASS" starttime="20200928 16:59:37.299" endtime="20200928 16:59:37.307"></status>
</kw>
<kw name="Listen and Get Messages" library="MQTT">
<arguments>
<arg>topic=${topic}</arg>
</arguments>
<assign>
<var>@{messages}</var>
</assign>
<kw name="Listen" library="MQTTLibrary">
<doc>Listen to a topic and return a list of message payloads received
    within the specified time. Requires an async Subscribe to have been called previously.</doc>
<arguments>
<arg>${topic}</arg>
<arg>${timeout}</arg>
<arg>${limit}</arg>
</arguments>
<assign>
<var>@{messages}</var>
</assign>
<msg timestamp="20200928 16:59:37.308" level="INFO">Listening on topic: test/mqtt_test_sub</msg>
<msg timestamp="20200928 16:59:38.310" level="INFO">@{messages} = [ test message ]</msg>
<status status="PASS" starttime="20200928 16:59:37.308" endtime="20200928 16:59:38.311"></status>
</kw>
<msg timestamp="20200928 16:59:38.312" level="INFO">@{messages} = [ test message ]</msg>
<status status="PASS" starttime="20200928 16:59:37.307" endtime="20200928 16:59:38.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${messages}</arg>
</arguments>
<msg timestamp="20200928 16:59:38.314" level="INFO">['test message']</msg>
<status status="PASS" starttime="20200928 16:59:38.313" endtime="20200928 16:59:38.315"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${messages}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200928 16:59:38.317" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20200928 16:59:38.315" endtime="20200928 16:59:38.317"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${messages}[0]</arg>
<arg>test message</arg>
</arguments>
<status status="PASS" starttime="20200928 16:59:38.317" endtime="20200928 16:59:38.320"></status>
</kw>
<kw name="Unsubscribe and Disconnect" library="MQTT" type="teardown">
<arguments>
<arg>${topic}</arg>
</arguments>
<kw name="Unsubscribe" library="MQTTLibrary">
<doc>Unsubscribe the client from the specified topic.</doc>
<arguments>
<arg>${topic}</arg>
</arguments>
<msg timestamp="20200928 16:59:38.323" level="INFO">Closing background loop</msg>
<msg timestamp="20200928 16:59:39.317" level="INFO">Unsubscribing from topic: test/mqtt_test_sub</msg>
<status status="PASS" starttime="20200928 16:59:38.322" endtime="20200928 16:59:39.320"></status>
</kw>
<kw name="Disconnect" library="MQTTLibrary" type="teardown">
<doc>Disconnect from MQTT Broker.</doc>
<status status="PASS" starttime="20200928 16:59:39.323" endtime="20200928 16:59:39.331"></status>
</kw>
<status status="PASS" starttime="20200928 16:59:38.320" endtime="20200928 16:59:39.332"></status>
</kw>
<status status="PASS" starttime="20200928 16:59:37.285" endtime="20200928 16:59:39.332"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200928 16:59:37.283" endtime="20200928 16:59:39.334" critical="yes"></status>
</test>
<doc>Test Binding</doc>
<status status="PASS" starttime="20200928 16:59:37.244" endtime="20200928 16:59:39.341"></status>
</suite>
<status status="PASS" starttime="20200928 16:59:37.242" endtime="20200928 16:59:39.350"></status>
</suite>
<status status="PASS" starttime="20200928 16:59:37.216" endtime="20200928 16:59:39.357"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Isg-Cim-Tpdl-Demo">Isg-Cim-Tpdl-Demo</stat>
<stat pass="1" fail="0" id="s1-s1" name="Tests">Isg-Cim-Tpdl-Demo.Tests</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="TestBinding">Isg-Cim-Tpdl-Demo.Tests.TestBinding</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
