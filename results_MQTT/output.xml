<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.7.5 on linux)" generated="20200929 17:16:22.497" rpa="false">
<suite id="s1" name="Isg-Cim-Tpdl-Demo" source="/home/poliveira/git/isg-cim-tpdl-demo">
<suite id="s1-s1" name="Tests" source="/home/poliveira/git/isg-cim-tpdl-demo/Tests">
<suite id="s1-s1-s1" name="Binding" source="/home/poliveira/git/isg-cim-tpdl-demo/Tests/Binding.robot">
<test id="s1-s1-s1-t1" name="Test notify MQTT Broker">
<kw name="Notify Broker" library="MQTT">
<doc>Subscribe async, publish 1 message, listen for and validate it is received</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20200929 17:16:22.557" level="INFO">${time} = 1601396182</msg>
<status status="PASS" starttime="20200929 17:16:22.557" endtime="20200929 17:16:22.557"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=.</arg>
<arg>robot.mqtt</arg>
<arg>${time}</arg>
</arguments>
<assign>
<var>${client}</var>
</assign>
<msg timestamp="20200929 17:16:22.558" level="INFO">${client} = robot.mqtt.1601396182</msg>
<status status="PASS" starttime="20200929 17:16:22.558" endtime="20200929 17:16:22.558"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>test/mqtt_test_sub</arg>
</arguments>
<assign>
<var>${topic}</var>
</assign>
<msg timestamp="20200929 17:16:22.559" level="INFO">${topic} = test/mqtt_test_sub</msg>
<status status="PASS" starttime="20200929 17:16:22.559" endtime="20200929 17:16:22.559"></status>
</kw>
<kw name="Subscribe Async" library="MQTT">
<arguments>
<arg>client.id=${client}</arg>
<arg>topic=${topic}</arg>
</arguments>
<kw name="Connect" library="MQTTLibrary">
<doc>Connect to an MQTT broker. This is a pre-requisite step for publish
and subscribe keywords.</doc>
<arguments>
<arg>${broker.uri}</arg>
<arg>${port}</arg>
<arg>${client.id}</arg>
<arg>${false}</arg>
</arguments>
<msg timestamp="20200929 17:16:22.561" level="INFO">Connecting to 127.0.0.1 at port 1883</msg>
<status status="PASS" starttime="20200929 17:16:22.560" endtime="20200929 17:16:22.567"></status>
</kw>
<kw name="Subscribe" library="MQTTLibrary">
<doc>Subscribe to a topic and return a list of message payloads received
    within the specified time.</doc>
<arguments>
<arg>${topic}</arg>
<arg>${qos}</arg>
<arg>${timeout}</arg>
<arg>${limit}</arg>
</arguments>
<msg timestamp="20200929 17:16:22.568" level="INFO">Subscribing to topic: test/mqtt_test_sub</msg>
<msg timestamp="20200929 17:16:22.568" level="INFO">Starting background loop</msg>
<status status="PASS" starttime="20200929 17:16:22.567" endtime="20200929 17:16:22.569"></status>
</kw>
<status status="PASS" starttime="20200929 17:16:22.560" endtime="20200929 17:16:22.569"></status>
</kw>
<kw name="Publish to MQTT Broker" library="MQTT">
<arguments>
<arg>topic=${topic}</arg>
<arg>message=test message</arg>
<arg>qos=1</arg>
</arguments>
<kw name="Connect" library="MQTTLibrary">
<doc>Connect to an MQTT broker. This is a pre-requisite step for publish
and subscribe keywords.</doc>
<arguments>
<arg>${broker.uri}</arg>
<arg>${port}</arg>
<arg>${client.id}</arg>
<arg>${clean_session}</arg>
</arguments>
<msg timestamp="20200929 17:16:22.571" level="INFO">Connecting to 127.0.0.1 at port 1883</msg>
<status status="PASS" starttime="20200929 17:16:22.570" endtime="20200929 17:16:22.573"></status>
</kw>
<kw name="Publish" library="MQTTLibrary">
<doc>Publish a message to a topic with specified qos and retained flag.
It is required that a connection has been established using `Connect`
keyword before using this keyword.</doc>
<arguments>
<arg>${topic}</arg>
<arg>${message}</arg>
<arg>${qos}</arg>
<arg>${retention}</arg>
</arguments>
<msg timestamp="20200929 17:16:22.574" level="INFO">Publish topic: test/mqtt_test_sub, message: test message, qos: 1, retain: False</msg>
<status status="PASS" starttime="20200929 17:16:22.573" endtime="20200929 17:16:22.574"></status>
</kw>
<status status="PASS" starttime="20200929 17:16:22.569" endtime="20200929 17:16:22.575"></status>
</kw>
<kw name="Listen and Get Messages" library="MQTT">
<arguments>
<arg>topic=${topic}</arg>
</arguments>
<assign>
<var>@{messages}</var>
</assign>
<kw name="Listen" library="MQTTLibrary">
<doc>Listen to a topic and return a list of message payloads received
    within the specified time. Requires an async Subscribe to have been called previously.</doc>
<arguments>
<arg>${topic}</arg>
<arg>${timeout}</arg>
<arg>${limit}</arg>
</arguments>
<assign>
<var>@{messages}</var>
</assign>
<msg timestamp="20200929 17:16:22.576" level="INFO">Listening on topic: test/mqtt_test_sub</msg>
<msg timestamp="20200929 17:16:23.578" level="INFO">@{messages} = [ test message ]</msg>
<status status="PASS" starttime="20200929 17:16:22.575" endtime="20200929 17:16:23.578"></status>
</kw>
<msg timestamp="20200929 17:16:23.580" level="INFO">@{messages} = [ test message ]</msg>
<status status="PASS" starttime="20200929 17:16:22.575" endtime="20200929 17:16:23.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${messages}</arg>
</arguments>
<msg timestamp="20200929 17:16:23.584" level="INFO">['test message']</msg>
<status status="PASS" starttime="20200929 17:16:23.581" endtime="20200929 17:16:23.585"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${messages}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200929 17:16:23.587" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20200929 17:16:23.586" endtime="20200929 17:16:23.588"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${messages}[0]</arg>
<arg>test message</arg>
</arguments>
<status status="PASS" starttime="20200929 17:16:23.589" endtime="20200929 17:16:23.592"></status>
</kw>
<kw name="Unsubscribe and Disconnect" library="MQTT" type="teardown">
<arguments>
<arg>${topic}</arg>
</arguments>
<kw name="Unsubscribe" library="MQTTLibrary">
<doc>Unsubscribe the client from the specified topic.</doc>
<arguments>
<arg>${topic}</arg>
</arguments>
<msg timestamp="20200929 17:16:23.599" level="INFO">Closing background loop</msg>
<msg timestamp="20200929 17:16:24.579" level="INFO">Unsubscribing from topic: test/mqtt_test_sub</msg>
<status status="PASS" starttime="20200929 17:16:23.597" endtime="20200929 17:16:24.581"></status>
</kw>
<kw name="Disconnect" library="MQTTLibrary" type="teardown">
<doc>Disconnect from MQTT Broker.</doc>
<status status="PASS" starttime="20200929 17:16:24.582" endtime="20200929 17:16:24.583"></status>
</kw>
<status status="PASS" starttime="20200929 17:16:23.593" endtime="20200929 17:16:24.584"></status>
</kw>
<status status="PASS" starttime="20200929 17:16:22.556" endtime="20200929 17:16:24.584"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200929 17:16:22.555" endtime="20200929 17:16:24.585" critical="yes"></status>
</test>
<doc>Test Binding</doc>
<status status="PASS" starttime="20200929 17:16:22.523" endtime="20200929 17:16:24.588"></status>
</suite>
<status status="PASS" starttime="20200929 17:16:22.521" endtime="20200929 17:16:24.594"></status>
</suite>
<status status="PASS" starttime="20200929 17:16:22.498" endtime="20200929 17:16:24.600"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Isg-Cim-Tpdl-Demo">Isg-Cim-Tpdl-Demo</stat>
<stat pass="1" fail="0" id="s1-s1" name="Tests">Isg-Cim-Tpdl-Demo.Tests</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Binding">Isg-Cim-Tpdl-Demo.Tests.Binding</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
